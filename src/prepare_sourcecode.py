#!/usr/bin/python3
###################################


import sys, os, time, shutil, subprocess

today=time.strftime("%d")+' '+time.strftime("%B")+' '+time.strftime("%Y")


###################################
#
# Create the default basis set folder
#
###################################

os.chdir('../basis')
basis_path = os.getcwd() + '/'
os.chdir('../src')


# Write first in a tmp file that will be moved later
# only if it differs from the existing file
# The purpose is to preserve the date of the existing file
# to avoid trigerring re-compilation all the time
fbp = open('basis_path.f90_tmp','w')

fbp.write('!======================================================================\n')
fbp.write('! This file is part of MOLGW.\n')
fbp.write('! The following lines have been generated by python script: prepare_sourcecode.py \n')
fbp.write('! Do not alter them directly: they will be overriden sooner or later by the script\n')
fbp.write('! To add a new input variable, modify the script directly\n')
fbp.write('! Generated by prepare_sourcecode.py on '+today+'\n')
fbp.write('!======================================================================\n\n')
fbp.write(' default_basis_path = \'' + basis_path + '\' \n\n')

fbp.close()


do_copy = False

if os.path.isfile('basis_path.f90'):
  fout = open('tmp','w')
  subprocess.call(['diff','basis_path.f90_tmp','basis_path.f90'],stdout=fout)
  fout.close()

  fout = open('tmp','r')
  do_copy = ( len(fout.readlines()) != 0 )
  fout.close()
  os.remove('tmp')

else:
  do_copy = True


if do_copy:
  print('Update file: basis_path.f90')
  shutil.copyfile('basis_path.f90_tmp','basis_path.f90')

os.remove('basis_path.f90_tmp')



###################################
#
# Create the version numbering
#
###################################

revision = []
fout = open('tmp','w')
try:
  subprocess.call(['svn','info'],stdout=fout,stderr=fout)
  fout.close()
  fout = open('tmp','r')
  for line in fout:
    if 'Revision' in line:
      revision = line.split(':')
except:
  pass

fout.close()

os.remove('tmp')


# Write first in a tmp file that will be moved later
# only if it differs from the existing file
# The purpose is to preserve the date of the existing file
# to avoid trigerring re-compilation all the time
frev = open('revision.f90_tmp','w')

frev.write('!======================================================================\n')
frev.write('! This file is part of MOLGW.\n')
frev.write('! The following lines have been generated by python script: prepare_sourcecode.py \n')
frev.write('! Do not alter them directly: they will be overriden sooner or later by the script\n')
frev.write('! To add a new input variable, modify the script directly\n')
frev.write('! Generated by prepare_sourcecode.py on '+today+'\n')
frev.write('!======================================================================\n\n')
if len(revision) > 0:
  frev.write(' revision = ' + revision[1].strip() + '\n\n')
else:
  frev.write(' revision = ' + ' -1 ' + '\n\n')

frev.close()


do_copy = False

if os.path.isfile('revision.f90'):
  fout = open('tmp','w')
  subprocess.call(['diff','revision.f90_tmp','revision.f90'],stdout=fout)
  fout.close()

  fout = open('tmp','r')
  do_copy = ( len(fout.readlines()) != 0 ) and len(revision) > 0
  fout.close()
  os.remove('tmp')

else:
  do_copy = True


if do_copy:
  print('Update file: revision.f90')
  shutil.copyfile('revision.f90_tmp','revision.f90')

os.remove('revision.f90_tmp')



